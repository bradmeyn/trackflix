import Head from 'next/head';

import { IMovie } from '@/types/types';
import Navbar from '@/components/layout/Navbar';
import Footer from '@/components/layout/Footer';
import { Inter } from '@next/font/google';
import { getMovies, MovieSearchData, getMoviesByYear } from '@/movieService';
import Carousel from '@/components/Carousel';
import LargeCarousel from '@/components/LargeCarousel';
const inter = Inter({ subsets: ['latin'] });

interface MoviesByYear {
  title: string;
  movies: IMovie[];
}

export default function Movies({
  carouselData,
}: {
  carouselData: CarouselData[];
}) {
  return (
    <>
      <Head>
        <title>Watchflix | Popular</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='flex min-h-screen grow flex-col bg-gradient-to-t from-slate-800 to-slate-900 '>
        <Navbar />
        <main className={'flex grow flex-col '}>
          <LargeCarousel movies={carouselData[0].data.results} />
          {carouselData.map((collection) => (
            <Carousel key={collection.title} carouselData={collection} />
          ))}
        </main>
        <Footer />
      </div>
    </>
  );
}

export interface CarouselData {
  title: string;
  url: string;
  data: MovieSearchData;
}

export async function getServerSideProps() {
  const API_KEY = process.env.NEXT_PUBLIC_API_KEY!;
  const params = new URLSearchParams({
    api_key: API_KEY!,
    language: 'en-AU',
  });

  const popularMoviesData = await getMovies('trending/movie/week?', 1);
  const topRatedMoviesData = await getMovies('movie/top_rated?', 1);

  const randomYear = Math.floor(Math.random() * 40) + 1970;
  const randomYearData1 = await getMoviesByYear(randomYear - 10, 1);
  const randomYearData2 = await getMoviesByYear(randomYear - 5, 1);
  const randomYearData3 = await getMoviesByYear(randomYear, 1);
  const randomYearData4 = await getMoviesByYear(randomYear + 5, 1);
  const randomYearData5 = await getMoviesByYear(randomYear + 10, 1);

  const carouselData: CarouselData[] = [
    {
      title: 'Popular Now',
      url: 'trending/movie/week?',
      data: popularMoviesData,
    },
    {
      title: 'All Time Classics',
      url: 'movie/top_rated?',
      data: topRatedMoviesData,
    },
    {
      title: `Best of ${randomYear - 10}`,
      url: `discover/movie?${params}&primary_release_year=${
        randomYear - 10
      }&sort_by=revenue.desc`,
      data: randomYearData1,
    },
    {
      title: `Best of ${randomYear - 5}`,
      url: `discover/movie?${params}&primary_release_year=${
        randomYear - 5
      }&sort_by=revenue.desc`,
      data: randomYearData2,
    },
    {
      title: `Best of ${randomYear}`,
      url: `discover/movie?${params}&primary_release_year=${randomYear}&sort_by=revenue.desc`,
      data: randomYearData3,
    },
    {
      title: `Best of ${randomYear + 5}`,
      url: `discover/movie?${params}&primary_release_year=${
        randomYear + 5
      }&sort_by=revenue.desc`,
      data: randomYearData4,
    },
    {
      title: `Best of ${randomYear + 10}`,
      url: `discover/movie?${params}&primary_release_year=${
        randomYear + 10
      }&sort_by=revenue.desc`,
      data: randomYearData5,
    },
  ];

  return {
    props: {
      carouselData,
    },
  };
}
